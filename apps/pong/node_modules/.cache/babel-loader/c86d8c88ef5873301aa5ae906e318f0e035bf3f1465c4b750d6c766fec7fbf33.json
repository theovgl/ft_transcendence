{"ast":null,"code":"var _jsxFileName = \"/home/mtogbe/ft_transcendence/apps/pong/src/components/Character.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport birdImg from '../img/Player 1.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ACCELERATION = 5;\nconst MAX_SPEED = ACCELERATION * 2;\nconst ONLINEMODE = 0;\nconst PLAYERMODE = 1;\nconst OPPONENTMODE = 2;\nconst HEIGHTOFFSET = 4;\nconst Character = /*#__PURE__*/_s( /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  _s();\n  const [characterPosition, setCharacterPosition] = useState({\n    x: props.x,\n    y: props.y\n  });\n  const [characterSpeed, setCharacterSpeed] = useState({\n    x: 0,\n    y: 0\n  });\n  const [bounds, setBounds] = useState({\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  });\n  const [percentagePos, setPercentagePos] = useState({\n    x: characterPosition.x / props.gameBounds.width * 100,\n    y: characterPosition.y / props.gameBounds.height * 100\n  });\n  const [gamebounds, setGameBounds] = useState({\n    x: props.gameBounds.x,\n    y: props.gameBounds.y,\n    width: props.gameBounds.width,\n    height: props.gameBounds.height\n  });\n  let [isKeyDown, setIsKeyDown] = useState(false);\n\n  //  Resize Hitboxes\n  useEffect(() => {\n    const calculateHitBox = () => {\n      if (ref.current) {\n        const {\n          left,\n          top,\n          width,\n          height\n        } = ref.current.getBoundingClientRect();\n        setBounds({\n          x: left,\n          y: top,\n          width: width,\n          height: height\n        });\n      }\n      setCharacterPosition({\n        x: percentagePos.x / 100 * props.gameBounds.width,\n        y: percentagePos.y / 100 * props.gameBounds.height\n      });\n      const {\n        x,\n        y,\n        width,\n        height\n      } = props.gameBounds;\n      setGameBounds({\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    };\n    calculateHitBox();\n  }, [ref, percentagePos.x, percentagePos.y, props.gameBounds]);\n\n  //  Controls\n  useEffect(() => {\n    const handleKeyDown = event => {\n      setIsKeyDown(true);\n      switch (event.key.toLowerCase()) {\n        case props.controlMode === PLAYERMODE ? 'arrowup' : 'w':\n          setCharacterSpeed(prevSpeed => ({\n            x: prevSpeed.x,\n            y: Math.max(prevSpeed.y - ACCELERATION, -MAX_SPEED)\n          }));\n          break;\n        case props.controlMode === PLAYERMODE ? 'arrowup' : 'z':\n          setCharacterSpeed(prevSpeed => ({\n            x: prevSpeed.x,\n            y: Math.max(prevSpeed.y - ACCELERATION, -MAX_SPEED)\n          }));\n          break;\n        case props.controlMode === PLAYERMODE ? 'arrowdown' : 's':\n          setCharacterSpeed(prevSpeed => ({\n            x: prevSpeed.x,\n            y: Math.min(prevSpeed.y + ACCELERATION, MAX_SPEED)\n          }));\n          break;\n        default:\n          break;\n      }\n    };\n    const handleKeyUp = event => {\n      switch (event.key.toLowerCase()) {\n        case props.controlMode === PLAYERMODE ? 'arrowup' : 'w':\n          setCharacterSpeed({\n            x: 0,\n            y: 0\n          });\n          setIsKeyDown(false);\n          break;\n        case props.controlMode === PLAYERMODE ? 'arrowup' : 'z':\n          setCharacterSpeed({\n            x: 0,\n            y: 0\n          });\n          setIsKeyDown(false);\n          break;\n        case props.controlMode === PLAYERMODE ? 'arrowdown' : 's':\n          setCharacterSpeed({\n            x: 0,\n            y: 0\n          });\n          setIsKeyDown(false);\n          break;\n        default:\n          break;\n      }\n    };\n    if (props.controlMode === PLAYERMODE || props.controlMode === OPPONENTMODE) {\n      window.addEventListener('keydown', handleKeyDown);\n      window.addEventListener('keyup', handleKeyUp);\n      return () => {\n        window.removeEventListener('keydown', handleKeyDown);\n        window.removeEventListener('keyup', handleKeyUp);\n      };\n    }\n  }, [characterPosition, props.controlMode]);\n\n  //  Player movement (online and offline)\n  useEffect(() => {\n    if (isKeyDown) {\n      const intervalId = setInterval(() => {\n        let offset = HEIGHTOFFSET / 100 * gamebounds.height;\n        setCharacterSpeed(prevSpeed => ({\n          x: prevSpeed.x * (gamebounds.width / gamebounds.height),\n          y: prevSpeed.y * (gamebounds.width / gamebounds.height)\n        }));\n        setCharacterPosition(prevPosition => ({\n          x: prevPosition.x + characterSpeed.x,\n          y: Math.min(Math.max(prevPosition.y + characterSpeed.y, offset), gamebounds.height - bounds.height - offset)\n        }));\n        if (props.socket !== null && props.controlMode === OPPONENTMODE) {\n          props.socket.emit(\"player-moved\", {\n            userId: props.userId,\n            pos: {\n              x: characterPosition.x / gamebounds.width * 100,\n              y: characterPosition.y / gamebounds.height * 100\n            }\n          });\n        }\n      }, 16);\n      return () => {\n        clearInterval(intervalId);\n      };\n    }\n  }, [characterSpeed, isKeyDown, props.socket, characterPosition, props.userId, props.controlMode, bounds.height, gamebounds.height, gamebounds.width]);\n\n  //  Opponent movement online\n  useEffect(() => {\n    if (props.controlMode === ONLINEMODE) {\n      if (props.socket !== null) {\n        props.socket.on('opponent-moved', pos => {\n          setPercentagePos({\n            x: pos.x,\n            y: pos.y\n          });\n        });\n      }\n    }\n  }, [props.controlMode, props.socket]);\n\n  //  Responsive position\n  useEffect(() => {\n    setPercentagePos({\n      x: characterPosition.x / gamebounds.width * 100,\n      y: characterPosition.y / gamebounds.height * 100\n    });\n  }, [characterPosition.x, characterPosition.y, gamebounds.width, gamebounds.height]);\n  return /*#__PURE__*/_jsxDEV(CharacterDiv, {\n    ref: ref,\n    x: percentagePos.x,\n    y: percentagePos.y,\n    children: /*#__PURE__*/_jsxDEV(CharacterImg, {\n      src: birdImg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 7\n  }, this);\n}, \"JSk+Gl/TzyafYdp89LRthThXkp4=\")), \"JSk+Gl/TzyafYdp89LRthThXkp4=\");\n_c2 = Character;\nconst CharacterImg = styled.img`\n    width: 100%;\n    height: 100%;\n  `;\n_c3 = CharacterImg;\nconst CharacterDiv = styled.div.attrs(props => ({\n  style: {\n    position: 'absolute',\n    backgroundColor: 'red',\n    height: `40%`,\n    width: `3vw`,\n    left: `${props.x}%`,\n    top: `${props.y}%`\n    //  borderRadius: '0%',\n  }\n}))``;\n_c4 = CharacterDiv;\nexport default Character;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Character$React.forwardRef\");\n$RefreshReg$(_c2, \"Character\");\n$RefreshReg$(_c3, \"CharacterImg\");\n$RefreshReg$(_c4, \"CharacterDiv\");","map":{"version":3,"names":["React","useEffect","useState","styled","birdImg","jsxDEV","_jsxDEV","ACCELERATION","MAX_SPEED","ONLINEMODE","PLAYERMODE","OPPONENTMODE","HEIGHTOFFSET","Character","_s","forwardRef","_c","props","ref","characterPosition","setCharacterPosition","x","y","characterSpeed","setCharacterSpeed","bounds","setBounds","width","height","percentagePos","setPercentagePos","gameBounds","gamebounds","setGameBounds","isKeyDown","setIsKeyDown","calculateHitBox","current","left","top","getBoundingClientRect","handleKeyDown","event","key","toLowerCase","controlMode","prevSpeed","Math","max","min","handleKeyUp","window","addEventListener","removeEventListener","intervalId","setInterval","offset","prevPosition","socket","emit","userId","pos","clearInterval","on","CharacterDiv","children","CharacterImg","src","fileName","_jsxFileName","lineNumber","columnNumber","_c2","img","_c3","div","attrs","style","position","backgroundColor","_c4","$RefreshReg$"],"sources":["/home/mtogbe/ft_transcendence/apps/pong/src/components/Character.js"],"sourcesContent":["\r\nimport React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport birdImg from '../img/Player 1.png';\r\n\r\nconst ACCELERATION = 5;\r\nconst MAX_SPEED = ACCELERATION * 2;\r\nconst ONLINEMODE = 0;\r\nconst PLAYERMODE = 1;\r\nconst OPPONENTMODE = 2;\r\nconst HEIGHTOFFSET = 4;\r\n\r\nconst Character = React.forwardRef((props, ref) => {\r\n    const [characterPosition, setCharacterPosition] = useState({ x: props.x, y: props.y});\r\n    const [characterSpeed, setCharacterSpeed] = useState({ x: 0, y: 0 });\r\n    const [bounds, setBounds] = useState({x: 0, y:0, width: 0, height: 0});\r\n    const [percentagePos, setPercentagePos] = useState({\r\n      x: (characterPosition.x / props.gameBounds.width) * 100,\r\n      y: (characterPosition.y / props.gameBounds.height) * 100});\r\n    const [gamebounds, setGameBounds] = useState({\r\n      x: props.gameBounds.x,\r\n      y: props.gameBounds.y,\r\n      width: props.gameBounds.width,\r\n      height: props.gameBounds.height\r\n    })\r\n    let [isKeyDown, setIsKeyDown] = useState(false);\r\n    \r\n\r\n    \r\n//  Resize Hitboxes\r\n    useEffect(() => {\r\n      const calculateHitBox = () => {\r\n        if (ref.current)\r\n        {\r\n          const { left, top, width, height } = ref.current.getBoundingClientRect();\r\n          setBounds({ x: left, y: top, width: width, height: height });\r\n        }\r\n        setCharacterPosition({\r\n          x : (percentagePos.x / 100) * props.gameBounds.width,\r\n          y : (percentagePos.y / 100) * props.gameBounds.height\r\n        })\r\n        const { x, y, width, height } = props.gameBounds;\r\n        setGameBounds({x: x, y: y, width: width, height: height});\r\n      }\r\n\r\n      calculateHitBox();\r\n  \r\n    }, [ref, percentagePos.x, percentagePos.y, props.gameBounds]);\r\n\r\n//  Controls\r\n    useEffect(() => {\r\n      const handleKeyDown = (event) => {\r\n        setIsKeyDown(true);\r\n        switch (event.key.toLowerCase()) {\r\n          case props.controlMode === PLAYERMODE ? 'arrowup' : 'w':\r\n            setCharacterSpeed((prevSpeed) => ({\r\n              x: prevSpeed.x,\r\n              y: Math.max(prevSpeed.y - ACCELERATION, -MAX_SPEED),\r\n            }));\r\n            break;\r\n          case props.controlMode === PLAYERMODE ? 'arrowup' : 'z':\r\n            setCharacterSpeed((prevSpeed) => ({\r\n              x: prevSpeed.x,\r\n              y: Math.max(prevSpeed.y - ACCELERATION, -MAX_SPEED),\r\n            }));\r\n            break;\r\n          case props.controlMode === PLAYERMODE ? 'arrowdown' : 's':\r\n            setCharacterSpeed((prevSpeed) => ({\r\n              x: prevSpeed.x,\r\n              y: Math.min(prevSpeed.y + ACCELERATION, MAX_SPEED),\r\n            }));\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      };\r\n  \r\n      const handleKeyUp = (event) => {\r\n        switch (event.key.toLowerCase()) {\r\n          case props.controlMode === PLAYERMODE ? 'arrowup' : 'w':\r\n            setCharacterSpeed({ x: 0, y: 0 });\r\n            setIsKeyDown(false);\r\n            break;\r\n          case props.controlMode === PLAYERMODE ? 'arrowup' : 'z':\r\n            setCharacterSpeed({ x: 0, y: 0 });\r\n            setIsKeyDown(false);\r\n            break;\r\n          case props.controlMode === PLAYERMODE ? 'arrowdown' : 's':\r\n            setCharacterSpeed({ x: 0, y: 0 });\r\n            setIsKeyDown(false);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      };\r\n      if (props.controlMode === PLAYERMODE || props.controlMode === OPPONENTMODE)\r\n      {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n        window.addEventListener('keyup', handleKeyUp);\r\n    \r\n        return () => {\r\n          window.removeEventListener('keydown', handleKeyDown);\r\n          window.removeEventListener('keyup', handleKeyUp);\r\n        };\r\n      }\r\n    }, [characterPosition, props.controlMode]);\r\n  \r\n//  Player movement (online and offline)\r\n    useEffect(() => {\r\n      if (isKeyDown) {\r\n          const intervalId = setInterval(() => {\r\n            let offset = (HEIGHTOFFSET / 100) * gamebounds.height;\r\n            setCharacterSpeed((prevSpeed) => ({\r\n              x : prevSpeed.x * (gamebounds.width / gamebounds.height),\r\n              y : prevSpeed.y * (gamebounds.width / gamebounds.height)\r\n            }))\r\n            setCharacterPosition((prevPosition) => ({\r\n              x: prevPosition.x + characterSpeed.x,\r\n              y: Math.min(Math.max(prevPosition.y + characterSpeed.y, offset)\r\n              , gamebounds.height - bounds.height - offset)\r\n            }));\r\n            if (props.socket !== null && props.controlMode === OPPONENTMODE)\r\n            {\r\n              props.socket.emit(\"player-moved\", {\r\n                userId: props.userId,\r\n                pos: {\r\n                  x : (characterPosition.x / gamebounds.width) * 100,\r\n                  y : (characterPosition.y / gamebounds.height) * 100\r\n                }\r\n              })\r\n            }\r\n          }, 16);\r\n          return () => {\r\n            clearInterval(intervalId);\r\n          };\r\n      }\r\n    }, [characterSpeed, isKeyDown, props.socket, characterPosition, props.userId, props.controlMode,\r\n        bounds.height, gamebounds.height, gamebounds.width]);\r\n    \r\n//  Opponent movement online\r\n    useEffect(() => {\r\n      if (props.controlMode === ONLINEMODE)\r\n      {\r\n        if (props.socket !== null)\r\n        {\r\n          props.socket.on('opponent-moved', (pos) => {\r\n            setPercentagePos({\r\n              x: pos.x,\r\n              y: pos.y,\r\n            })\r\n\r\n          })\r\n        }\r\n      }\r\n    }, [props.controlMode, props.socket])\r\n\r\n//  Responsive position\r\n    useEffect(() => {\r\n      setPercentagePos({\r\n        x : (characterPosition.x / gamebounds.width) * 100,\r\n        y : (characterPosition.y / gamebounds.height) * 100\r\n      });\r\n    }, [characterPosition.x, characterPosition.y, gamebounds.width, gamebounds.height])\r\n\r\n    return (\r\n      <CharacterDiv ref={ref} x={percentagePos.x} y={percentagePos.y}>\r\n        <CharacterImg src={birdImg}></CharacterImg>\r\n      </CharacterDiv>\r\n    );\r\n  });\r\n  \r\n\r\n  \r\n  const CharacterImg = styled.img`\r\n    width: 100%;\r\n    height: 100%;\r\n  `;\r\n\r\n  const CharacterDiv = styled.div.attrs((props) => ({\r\n    style: {\r\n      position: 'absolute',\r\n      backgroundColor: 'red',\r\n      height: `40%`,\r\n      width: `3vw`,\r\n      left: `${props.x}%`,\r\n      top: `${props.y}%`,\r\n    //  borderRadius: '0%',\r\n    },\r\n  }))``;\r\n\r\nexport default Character;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}